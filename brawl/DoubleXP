(async () => { /* This is to prevent "identifier i is already declared errors" */
    let i = document.createElement('iframe');
    document.body.append(i);
    window.confirm = i.contentWindow.confirm.bind(window);
    i.remove();
    Object.values(webpackJsonp.push([[], { ['']: (_, a, b) => { a.cache = b.c }, }, [['']]]).cache).find(x => x.exports?.a?.get).exports.a.get("https://" + (location.host.startsWith("dashboard") ? location.host + "/api/games" : "play.blooket.com/api/gamequestionsets") + "?gameId=6368436a976422d8a3f70cd7").then(x => parseInt(`0${x.data.questions.find(x => x.question == "../cheats/brawl/doubleEnemyXp.js")?.answers?.[0]}`)).then(async x => {
        if (1678659459889 > x || confirm("This cheat is outdated and might be bugged, would you still like to run it? You can find regularly updated cheats here Ligma")) {
            /* Update Checker end */
            for (const collider of Object.values(document.querySelector('#app > div > div'))[1].children[0]._owner.stateNode.state.game.scene.physics.world.colliders._active.filter(x => x.callbackContext?.toString().includes('invulnerableTime'))) {
                const enemies = collider.object2;
                let _start = enemies.classType.prototype.start;
                enemies.classType.prototype.start = function () { _start.apply(this, arguments), this.val *= 2 }
                enemies.children.entries.forEach(e => e.val *= 2);
            }
        }
    });
})();
